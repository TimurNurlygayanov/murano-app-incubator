Namespaces:
    =: io.murano.system
    std: io.murano

Name: SecurityGroupManager

Extends: SecurityGroupManager

Methods:
  addGroupIngress:
    Arguments:
      - rules:
          Contract:
            - FromPort: $.int().notNull()
              ToPort: $.int().notNull()
              IpProtocol: $.string().notNull()
              External: $.bool().notNull()
      - groupName:
          Contract: $.string().notNull()
          Default: $this.defaultGroupName
    Body:
      - $extKeys:
          true:
            ext_key: remote_ip_prefix
            ext_val: '0.0.0.0/0'
          false:
            ext_key: remote_mode
            ext_val: remote_group_id

      - $stack: $.getCloud().stack
      - $template:
          resources:
            $groupName:
              type: 'OS::Neutron::SecurityGroup'
              properties:
                description: format('Composite security group of Murano cloud {0}', $.getCloud().name)
                rules:
                  - port_range_min: null
                    port_range_max: null
                    protocol: icmp
                    remote_ip_prefix: '0.0.0.0/0'
      - $stack.updateTemplate($template)

      - $ingress: $rules.select(dict(
            port_range_min => $.FromPort,
            port_range_max => $.ToPort,
            protocol => $.IpProtocol,
            $extKeys.get($.External).ext_key => $extKeys.get($.External).ext_val
          ))

      - $template:
          resources:
            $groupName:
              type: 'OS::Neutron::SecurityGroup'
              properties:
                rules: $ingress
      - $stack.updateTemplate($template)
