Namespaces:
  =: io.murano

Name: SharedIp
Extends: CloudObject

Properties:
  assignFloatingIp:
    Contract: $.bool().notNull()
    Default: false
  virtualIp:
    Contract: $.string()
    Usage: Out
  floatingIpAddress:
    Contract: $.string()
    Usage: Out

Workflow:
  initialize:
    Body:
      - $environment: $.find(Environment).require()
      - $._reporter: $environment.reporter
      - $._cloud: $.getCloud().require()
      - $._network: $._cloud.defaultNetworks.environment
      - $._instances: []

  deploy:
    Body:
      - If: not $.getAttr(deployed, false)
        Then:
          - $._network.deploy()
          - $aapPortName: format('AllowedAddressPairsPort-{0}', $.id())
          - $template:
              resources:
                $aapPortName:
                  type: 'OS::Neutron::Port'
                  properties:
                    network_id:
                      get_resource: format('{0}-net-{1}', $._network.name, $._network.id())
                    fixed_ips:
                      - subnet_id:
                          get_resource: format('{0}-subnet-{1}', $._network.name, $._network.id())
              outputs:
                $aapPortName+'-virtualIp':
                  value:
                    get_attr: [$aapPortName, fixed_ips, 0, ip_address]
                  description: format('SharedIP Address of SharedIp group {0}', $.id())
          - $._cloud.stack.updateTemplate($template)
          - If: $.assignFloatingIp
            Then:
              - $extNetId: $._network.getExternalNetId()
              - $fipName: format('Shared-Floating-ip-{0}', $.id())
              - $fipAssocName: format('Shared-Floating-ip-assoc-{0}', $.id())
              - $template:
                  resources:
                    $fipName:
                      type: 'OS::Neutron::FloatingIP'
                      properties:
                        floating_network_id: $extNetId
                    $fipAssocName:
                      type: 'OS::Neutron::FloatingIPAssociation'
                      properties:
                        floatingip_id:
                          get_resource: $fipName
                        port_id:
                          get_resource: $aapPortName
                  outputs:
                    $fipName + '-val':
                      value:
                        get_attr: [$fipName, floating_ip_address]
                      description: Shared Floating IP assigned
              - $._cloud.stack.updateTemplate($template)

          - $._reporter.report($this, 'Allocating shared ip address')
          - $._cloud.stack.push()
          - $outputs: $._cloud.stack.output()
          - $.virtualIp: $outputs.get(format('AllowedAddressPairsPort-{0}-virtualIp', $.id()))
          - $.floatingIpAddress: $outputs.get(format('Shared-Floating-ip-{0}-val', $.id()))
          - $._reporter.report($this, format('Shared IP allocated at {0}', $.virtualIp))
          - If: $.assignFloatingIp
            Then:
              - $._reporter.report($this, format('Floating shared IP is {0}', $.floatingIpAddress))
          - $.setAttr(deployed, true)


  getSharedIpRef:
    Body:
      - $aapPortName: format('AllowedAddressPairsPort-{0}', $.id())
      - Return:
          get_attr: [$aapPortName, fixed_ips, 0, ip_address]





